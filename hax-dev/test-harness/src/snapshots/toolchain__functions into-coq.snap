---
source: test-harness/src/harness.rs
expression: snapshot
info:
  kind:
    Translate:
      backend: coq
  info:
    name: functions
    manifest: functions/Cargo.toml
    description: ~
  spec:
    optional: false
    broken: false
    issue_id: ~
    positive: true
    snapshot:
      stderr: false
      stdout: true
    include_flag: ~
    backend_options: ~
---
exit = 1
[[stdout.diagnostics]]
message = '''
(Coq backend) something is not implemented yet.
[ty] node typ'''
spans = ['Span { lo: Loc { line: 11, col: 4 }, hi: Loc { line: 17, col: 5 }, filename: Real(LocalPath("functions/src/lib.rs")), rust_span_data: None }']

[stdout.files]
"Functions.v" = '''
(* File automatically generated by Hacspec *)
From Hacspec Require Import Hacspec_Lib MachineIntegers.
From Coq Require Import ZArith.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.

(*Not implemented yet? todo(item)*)

(*Not implemented yet? todo(item)*)

Definition calling_function_pointer__f (_ : unit) : unit :=
  tt.

Definition calling_function_pointer (_ : unit) : unit :=
  let f_ptr := calling_function_pointer__f : unit -> unit in
  let _ := calling_function_pointer__f tt : unit in
  tt.
'''
"Functions_Issue_1048_.v" = '''
(* File automatically generated by Hacspec *)
From Hacspec Require Import Hacspec_Lib MachineIntegers.
From Coq Require Import ZArith.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.

Record t_CallableViaDeref : Type := {
}.

(*item error backend*)

Definition call_via_deref (_ : unit) : bool :=
  f_deref CallableViaDereft_CallableViaDeref_t tt.
'''
