---
source: test-harness/src/harness.rs
expression: snapshot
info:
  kind:
    Translate:
      backend: fstar
  info:
    name: constructor-as-closure
    manifest: constructor-as-closure/Cargo.toml
    description: ~
  spec:
    optional: false
    broken: false
    issue_id: ~
    positive: true
    snapshot:
      stderr: false
      stdout: true
    include_flag: ~
    backend_options: ~
---
exit = 0

[stdout]
diagnostics = []

[stdout.files]
"Constructor_as_closure.fst" = '''
module Constructor_as_closure
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

type t_Test = | Test : i32 -> t_Test

let impl_Test__test (x: Core.Option.t_Option i32) : Core.Option.t_Option t_Test =
  Core.Option.impl__map #i32 #t_Test x Test

type t_Context =
  | Context_A : i32 -> t_Context
  | Context_B : i32 -> t_Context

let impl_Context__test (x: Core.Option.t_Option i32) : Core.Option.t_Option t_Context =
  Core.Option.impl__map #i32 #t_Context x Context_B
'''
